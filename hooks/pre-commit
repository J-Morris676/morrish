#!/bin/sh
# If a Node project, attempts to fix eslint issues or warn if there are unfixable ones

function is_node_project() {
    PACKAGE="$(git rev-parse --show-toplevel)/package.json"

    if [ -f "$PACKAGE" ]; then
        return 0
    else
        return 1
    fi
}

if is_node_project; then
    # Check for eslint
    ESLINT="$(git rev-parse --show-toplevel)/node_modules/.bin/eslint"
    if [[ ! -x "$ESLINT" ]]; then
        echo "\t\033[41mPlease install ESlint\033[0m (npm i --save --save-exact --dev eslint)"
        exit 1
    fi

    STAGED_FILES=$(git diff --cached --name-only --diff-filter=ACM | grep ".jsx\{0,1\}$")

    if [[ "$STAGED_FILES" = "" ]]; then
        exit 0
    fi

    PASS=true

    echo "\nLinting staged changes:\n"

    ESLINT="$(git rev-parse --show-toplevel)/node_modules/.bin/eslint"

    if [[ ! -x "$ESLINT" ]]; then
        echo "\t\033[41mPlease install ESlint\033[0m (npm i --save --save-exact --dev eslint)"
        exit 1
    fi

    for FILE in $STAGED_FILES
    do
        "$ESLINT" "$FILE" --fix

        if [[ "$?" == 0 ]]; then
            echo "\t\033[32mESLint Passed: $FILE\033[0m"
        else
            echo "\t\033[41mESLint Failed: $FILE\033[0m"
            PASS=false
        fi

        git add $FILE
    done

    echo "\nLinting completed!\n"

    if ! $PASS; then
    echo "\033[41mWARNING :\033[0m Your commit contains files that should pass ESLint but do not.\n"
    fi
fi